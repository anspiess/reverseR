inflPlot(res)
View(res$infl)
summary(LM)
DAT <- read.delim(file = "clipboard", sep = "\t", dec = ".", header = T)
colnames(DAT) <- c("x", "y")
LM <- lm(y ~ x, data = DAT)
res <- lmInfl(LM)
write.table(res$infl[, c(16, 9, 10, 11, 12, 13, 15)], file = "clipboard", sep = "\t", row.names = FALSE,
col.names = TRUE)
inflPlot(res)
View(res$infl)
summary(LM)
DAT <- read.delim(file = "clipboard", sep = "\t", dec = ".", header = T)
colnames(DAT) <- c("x", "y")
LM <- lm(y ~ x, data = DAT)
res <- lmInfl(LM)
write.table(res$infl[, c(16, 9, 10, 11, 12, 13, 15)], file = "clipboard", sep = "\t", row.names = FALSE,
col.names = TRUE)
inflPlot(res)
View(res$infl)
summary(LM)
DAT <- read.delim(file = "clipboard", sep = "\t", dec = ".", header = T)
colnames(DAT) <- c("x", "y")
LM <- lm(y ~ x, data = DAT)
res <- lmInfl(LM)
write.table(res$infl[, c(16, 9, 10, 11, 12, 13, 15)], file = "clipboard", sep = "\t", row.names = FALSE,
col.names = TRUE)
inflPlot(res)
View(res$infl)
summary(LM)
n <- nrow(DAT)
DAT <- read.delim(file = "clipboard", sep = "\t", dec = ".", header = T)
colnames(DAT) <- c("x", "y")
LM <- lm(y ~ x, data = DAT)
res <- lmInfl(LM)
write.table(res$infl[, c(16, 9, 10, 11, 12, 13, 15)], file = "clipboard", sep = "\t", row.names = FALSE,
col.names = TRUE)
inflPlot(res)
View(res$infl)
summary(LM)
n <- 15; N <- 100
set.seed(127); x <- 1:n; x <- x + rnorm(n, 0, 0.5)
## ... alternatively with high-leverage point
# x[15] <- 16
res <- simInfl(x, slope = 0.1, intercept = 1, error = 0.5, nrev = N)
library(reverseR)
n <- 15; N <- 100
set.seed(127); x <- 1:n; x <- x + rnorm(n, 0, 0.5)
## ... alternatively with high-leverage point
# x[15] <- 16
res <- simInfl(x, slope = 0.1, intercept = 1, error = 0.5, nrev = N)
names(res)
View(res$mat)
simInfl
source('D:/R-packages/packages/reverseR/R/simInfl.R')
n <- 15; N <- 100
set.seed(127); x <- 1:n; x <- x + rnorm(n, 0, 0.5)
## ... alternatively with high-leverage point
# x[15] <- 16
res <- simInfl(x, slope = 0.1, intercept = 1, error = 0.5, nrev = N)
View(res$mat)
source('D:/R-packages/packages/reverseR/R/simInfl.R')
n <- 15; N <- 100
set.seed(127); x <- 1:n; x <- x + rnorm(n, 0, 0.5)
## ... alternatively with high-leverage point
# x[15] <- 16
res <- simInfl(x, slope = 0.1, intercept = 1, error = 0.5, nrev = N)
source('D:/R-packages/packages/reverseR/R/simInfl.R')
n <- 15; N <- 100
set.seed(127); x <- 1:n; x <- x + rnorm(n, 0, 0.5)
## ... alternatively with high-leverage point
# x[15] <- 16
res <- simInfl(x, slope = 0.1, intercept = 1, error = 0.5, nrev = N)
source('D:/R-packages/packages/reverseR/R/simInfl.R')
n <- 15; N <- 100
set.seed(127); x <- 1:n; x <- x + rnorm(n, 0, 0.5)
## ... alternatively with high-leverage point
# x[15] <- 16
res <- simInfl(x, slope = 0.1, intercept = 1, error = 0.5, nrev = N)
res$mat
View(res$mat)
library(reverseR)
n <- 15; N <- 100
set.seed(127); x <- 1:n; x <- x + rnorm(n, 0, 0.5)
## ... alternatively with high-leverage point
# x[15] <- 16
res <- simInfl(x, slope = 0.1, intercept = 1, error = 0.5, nrev = N)
source('D:/R-packages/packages/reverseR/R/simInfl.R')
n <- 15; N <- 100
set.seed(127); x <- 1:n; x <- x + rnorm(n, 0, 0.5)
## ... alternatively with high-leverage point
# x[15] <- 16
res <- simInfl(x, slope = 0.1, intercept = 1, error = 0.5, nrev = N)
source('D:/R-packages/packages/reverseR/R/simInfl.R')
n <- 15; N <- 100
set.seed(127); x <- 1:n; x <- x + rnorm(n, 0, 0.5)
## ... alternatively with high-leverage point
# x[15] <- 16
res <- simInfl(x, slope = 0.1, intercept = 1, error = 0.5, nrev = N)
View(res$mat)
n <- 15; N <- 10000
set.seed(127); x <- 1:n; x <- x + rnorm(n, 0, 0.5)
## ... alternatively with high-leverage point
# x[15] <- 16
res <- simInfl(x, slope = 0.1, intercept = 1, error = 0.5, nrev = N)
View(res$mat)
nrow(res$mat)
write.table(res$mat, file = "clipboard-64000", sep = "t", row.names = F)
write.table(res$mat, file = "clipboard-64000", sep = "\t", row.names = F)
min(res$mat[, "origP"])
hist(res$mat[, "origP"], breaks = 11)
hist(res$mat[, "origP"], breaks = 100)
P1 <- res$mat[, "origP"]
P1
hist(P1, breaks = 100)
n <- 15; N <- 10000
set.seed(127); x <- 1:n; x <- x + rnorm(n, 0, 0.5)
x[15] <- 16
## ... alternatively with high-leverage point
# x[15] <- 16
res <- simInfl(x, slope = 0.1, intercept = 1, error = 0.5, nrev = N)
P2 <- res$mat[, "origP"]
hist(P2, breaks = 100)
write.table(res$mat, file = "clipboard-64000", sep = "\t", row.names = F)
n <- 15; N <- 10000
set.seed(127); x <- 1:n; x <- x + rnorm(n, 0, 0.5)
x[15] <- 16
x
## ... alternatively with high-leverage point
# x[15] <- 16
res <- simInfl(x, slope = 0.1, intercept = 1, error = 0.5, nrev = N)
n <- 15; N <- 10000
set.seed(127); x <- 1:n; x <- x + rnorm(n, 0, 0.5)
## ... alternatively with high-leverage point
# x[15] <- 16
res <- simInfl(x, slope = 0.1, intercept = 1, error = 0.5, nrev = N)
z1 <- res
x
n <- 15; N <- 10000
set.seed(127); x <- 1:n; x <- x + rnorm(n, 0, 0.5)
x[15] <- 16
x
## ... alternatively with high-leverage point
# x[15] <- 16
res <- simInfl(x, slope = 0.1, intercept = 1, error = 0.5, nrev = N)
View(res$mat)
z1 <- res$mat
xVec <- res$models[[1]]$model[, 2]
yMat <- matrix(NA, nrow = n, ncol = N)
for (i in 1:N) yMat[, i] <- res$models[[i]]$model[, 1]
matplot(xVec, yMat, pch = 1, lty = 1, lwd = 1, col = 1, las = 1,
xlab = "x", ylab = "y", type = "p", ylim = c(-2, 4), xaxp = c(1, 16, 15))
abline(res$models[[1]], lwd = 2)
## Example for Figure 3A
matlines(xVec, yMat[, 1], pch = 16, lty = 1, lwd = 2, col = "blue", type = "p",
cex = 1.5)
thresh1 <- qf(0.5, 2, n-2)  # threshold value for Cook's D
sel1 <- which(res$mat[, "cook.d"] > thresh1)
thresh2 <- 2/sqrt(n)  # threshold value for dfbeta slope
sel2 <- which(abs(res$mat[, "dfb.Slope"]) > thresh2)
thresh3 <- 2 * sqrt(2/n) # threshold value for dffits
sel3 <- which(abs(res$mat[, "dffit"]) > thresh3)
thresh4 <- 3 * 2/n # threshold for covratio
res$mat[, "cov.r"] <- abs(res$mat[, "cov.r"]) -1
sel4 <- which(res$mat[, "cov.r"] > thresh4)
thresh5 <- 2 * 2/n # threshold for leverage
sel5 <- which(res$mat[, "hat"] > thresh5)
thresh6 <- qt(0.975, n - 2 - 1) # threshold for studentized residual
sel6 <- which(abs(res$mat[, "sR"]) > thresh6)
## find non-selected values that are missed by all influence measures
selAll <- sort(unique(c(sel1, sel2, sel3, sel4, sel5, sel6)))
selDiff <- (1:N)[-selAll]
length(selAll)/N*100
length(selDiff)/N*100
N
par(mfrow = c(2, 3)); par(mar = c(2, 3, 1, 1))
for (i in 1:6) {
plot(res$mat[, "dSlope"], res$mat[, "dSE"], xlab = "delta Slope",
ylab = "delta SE", type = "n")
points(res$mat[, "dSlope"], res$mat[, "dSE"], pch = 16, cex = 0.8,
col = "#000000FF", lwd = 1)
SEL <- get(paste("sel", i, sep = ""))
points(res$mat[SEL, "dSlope"], res$mat[SEL, "dSE"], pch = 16, cex = 0.8,
col = "#006400FF", lwd = 1)
}
plot(res$mat[, "dSlope"], res$mat[, "dSE"], xlab = "delta Slope",
ylab = "delta SE", type = "n")
points(res$mat[, "dSlope"], res$mat[, "dSE"], pch = 16, cex = 0.8,
col = "#000000FF", lwd = 1)
points(res$mat[selDiff, "dSlope"], res$mat[selDiff, "dSE"], pch = 16, cex = 0.8,
col = "#CD0000FF", lwd = 1)
## range features of "non-selects" and "selects"
range(res$mat[selDiff, "origP"])
## range features of "non-detects" and "detects"
range(res$mat[selDiff, "origP"])
range(res$mat[selAll, "origP"])
hist(res$mat[selDiff, "origP"], breaks = 100)
hist(res$mat[selAll, "origP"], breaks = 100)
n <- 15; N <- 10000
set.seed(127); x <- 1:n; x <- x + rnorm(n, 0, 0.5)
x[15] <- 16
x
## ... alternatively with high-leverage point
# x[15] <- 16
res <- simInfl(x, slope = 0.1, intercept = 1, error = 0.5, nrev = N)
xVec <- res$models[[1]]$model[, 2]
yMat <- matrix(NA, nrow = n, ncol = N)
for (i in 1:N) yMat[, i] <- res$models[[i]]$model[, 1]
matplot(xVec, yMat, pch = 1, lty = 1, lwd = 1, col = 1, las = 1,
xlab = "x", ylab = "y", type = "p", ylim = c(-2, 4), xaxp = c(1, 16, 15))
abline(res$models[[1]], lwd = 2)
## Example for Figure 3A
matlines(xVec, yMat[, 1], pch = 16, lty = 1, lwd = 2, col = "blue", type = "p",
cex = 1.5)
## Example for Figure 3B
matlines(xVec, yMat[, 2], pch = 16, lty = 1, lwd = 2, col = "blue", type = "p",
cex = 1.5)
xVec <- res$models[[1]]$model[, 2]
yMat <- matrix(NA, nrow = n, ncol = N)
for (i in 1:N) yMat[, i] <- res$models[[i]]$model[, 1]
matplot(xVec, yMat, pch = 1, lty = 1, lwd = 1, col = 1, las = 1,
xlab = "x", ylab = "y", type = "p", ylim = c(-2, 4), xaxp = c(1, 16, 15))
abline(res$models[[1]], lwd = 2)
## Example for Figure 3B
matlines(xVec, yMat[, 2], pch = 16, lty = 1, lwd = 2, col = "blue", type = "p",
cex = 1.5)
xVec <- res$models[[1]]$model[, 2]
yMat <- matrix(NA, nrow = n, ncol = N)
for (i in 1:N) yMat[, i] <- res$models[[i]]$model[, 1]
matplot(xVec, yMat, pch = 1, lty = 1, lwd = 1, col = 1, las = 1,
xlab = "x", ylab = "y", type = "p", ylim = c(-2, 4), xaxp = c(1, 16, 15))
abline(res$models[[1]], lwd = 2)
## Example for Figure 3B
matlines(xVec, yMat[, 2], pch = 16, lty = 1, lwd = 2, col = "blue", type = "p",
cex = 1.5)
write.table(res$mat, file = "clipboard-64000", sep = "\t", row.names = FALSE)
thresh1 <- qf(0.5, 2, n-2)  # threshold value for Cook's D
sel1 <- which(res$mat[, "cook.d"] > thresh1)
thresh2 <- 2/sqrt(n)  # threshold value for dfbeta slope
sel2 <- which(abs(res$mat[, "dfb.Slope"]) > thresh2)
thresh3 <- 2 * sqrt(2/n) # threshold value for dffits
sel3 <- which(abs(res$mat[, "dffit"]) > thresh3)
thresh4 <- 3 * 2/n # threshold for covratio
res$mat[, "cov.r"] <- abs(res$mat[, "cov.r"]) -1
sel4 <- which(res$mat[, "cov.r"] > thresh4)
thresh5 <- 2 * 2/n # threshold for leverage
sel5 <- which(res$mat[, "hat"] > thresh5)
thresh6 <- qt(0.975, n - 2 - 1) # threshold for studentized residual
sel6 <- which(abs(res$mat[, "sR"]) > thresh6)
## find non-selected values that are missed by all influence measures
selAll <- sort(unique(c(sel1, sel2, sel3, sel4, sel5, sel6)))
selDiff <- (1:N)[-selAll]
length(selAll)/N*100
length(selDiff)/N*100
## plot influence measures
par(mfrow = c(2, 3)); par(mar = c(2, 3, 1, 1))
for (i in 1:6) {
plot(res$mat[, "dSlope"], res$mat[, "dSE"], xlab = "delta Slope",
ylab = "delta SE", type = "n")
points(res$mat[, "dSlope"], res$mat[, "dSE"], pch = 16, cex = 0.8,
col = "#000000FF", lwd = 1)
SEL <- get(paste("sel", i, sep = ""))
points(res$mat[SEL, "dSlope"], res$mat[SEL, "dSE"], pch = 16, cex = 0.8,
col = "#006400FF", lwd = 1)
}
## plot "non-selects" => those that are not identified by influence measures
plot(res$mat[, "dSlope"], res$mat[, "dSE"], xlab = "delta Slope",
ylab = "delta SE", type = "n")
points(res$mat[, "dSlope"], res$mat[, "dSE"], pch = 16, cex = 0.8,
col = "#000000FF", lwd = 1)
points(res$mat[selDiff, "dSlope"], res$mat[selDiff, "dSE"], pch = 16, cex = 0.8,
col = "#CD0000FF", lwd = 1)
## range features of "non-detects" and "detects"
range(res$mat[selDiff, "origP"])
range(res$mat[selAll, "origP"])
n <- 15; N <- 10000
set.seed(127); x <- 1:n; x <- x + rnorm(n, 0, 0.5)
x
## ... alternatively with high-leverage point
# x[15] <- 16
res <- simInfl(x, slope = 0.1, intercept = 1, error = 0.5, nrev = N)
thresh1 <- qf(0.5, 2, n-2)  # threshold value for Cook's D
sel1 <- which(res$mat[, "cook.d"] > thresh1)
thresh2 <- 2/sqrt(n)  # threshold value for dfbeta slope
sel2 <- which(abs(res$mat[, "dfb.Slope"]) > thresh2)
thresh3 <- 2 * sqrt(2/n) # threshold value for dffits
sel3 <- which(abs(res$mat[, "dffit"]) > thresh3)
thresh4 <- 3 * 2/n # threshold for covratio
res$mat[, "cov.r"] <- abs(res$mat[, "cov.r"]) -1
sel4 <- which(res$mat[, "cov.r"] > thresh4)
thresh5 <- 2 * 2/n # threshold for leverage
sel5 <- which(res$mat[, "hat"] > thresh5)
thresh6 <- qt(0.975, n - 2 - 1) # threshold for studentized residual
sel6 <- which(abs(res$mat[, "sR"]) > thresh6)
## find non-selected values that are missed by all influence measures
selAll <- sort(unique(c(sel1, sel2, sel3, sel4, sel5, sel6)))
selDiff <- (1:N)[-selAll]
length(selAll)/N*100
length(selDiff)/N*100
selAll
selDiff
## range features of "non-detects" and "detects"
range(res$mat[selDiff, "origP"])
range(res$mat[selAll, "origP"])
View(res$mat)
hist(res$mat[, "origP"][selAll], breaks = 100)
hist(res$mat[, "origP"][selAll], breaks = 100)
hist(res$mat[, "origP"][selDiff], breaks = 100, add = TRUE)
hist(log10(res$mat[, "origP"][selAll]), breaks = 100)
hist(log10(res$mat[, "origP"][selDiff]), breaks = 100, add = TRUE)
hist(log10(res$mat[, "origP"][selAll]), breaks = 100, col = "grey")
hist(log10(res$mat[, "origP"][selDiff]), breaks = 100, add = TRUE, col = "black")
abline(v = log10(0.05), lwd = 2, col = "darkred)
abline(v = log10(0.05), lwd = 2, col = "darkred")
par(mfrow = c(2, 3)); par(mar = c(2, 3, 1, 1))
for (i in 1:6) {
plot(res$mat[, "dSlope"], res$mat[, "dSE"], xlab = "delta Slope",
ylab = "delta SE", type = "n")
points(res$mat[, "dSlope"], res$mat[, "dSE"], pch = 16, cex = 0.8,
col = "#000000FF", lwd = 1)
SEL <- get(paste("sel", i, sep = ""))
points(res$mat[SEL, "dSlope"], res$mat[SEL, "dSE"], pch = 16, cex = 0.8,
col = "#006400FF", lwd = 1)
}
## Figure S2: proximity of "detects" and "non-detects" to alpha = 0.05
hist(log10(res$mat[, "origP"][selAll]), breaks = 100, col = "#006400FF")
## Figure S2: proximity of "detects" and "non-detects" to alpha = 0.05
hist(log10(res$mat[, "origP"][selAll]), breaks = 100, col = "#006400FF")
hist(log10(res$mat[, "origP"][selAll]), breaks = 100, col = "#006400FF",
xlab = "INININ)
hist(log10(res$mat[, "origP"][selAll]), breaks = 100, col = "#006400FF",
xlab = "INININ")"
log10(res$mat[, "origP"][selAll]), breaks = 100,
col = "#006400FF", xlab = "INININ")
## Figure S2: proximity of "detects" and "non-detects" to alpha = 0.05
hist(log10(res$mat[, "origP"][selAll]), breaks = 100, col = "#006400FF", xlab = "INININ")
## Figure S2: proximity of "detects" and "non-detects" to alpha = 0.05
hist(log10(res$mat[, "origP"][selAll]), breaks = 100, col = "#006400FF", xlab = "log10 p-value")
## Figure S2: proximity of "detects" and "non-detects" to alpha = 0.05
hist(log10(res$mat[, "origP"][selAll]), breaks = 100, col = "#006400FF", xlab = "", main = "")
## Figure S2: proximity of "detects" and "non-detects" to alpha = 0.05
hist(log10(res$mat[, "origP"][selAll]), breaks = 100, col = "#006400FF", xlab = "", main = "", ylab = "")
## Figure S2: proximity of "detects" and "non-detects" to alpha = 0.05
hist(log10(res$mat[, "origP"][selAll]), breaks = 100, col = "#006400FF55", xlab = "", main = "", ylab = "")
## Figure S2: proximity of "detects" and "non-detects" to alpha = 0.05
hist(log10(res$mat[, "origP"][selAll]), breaks = 100, col = "#006400FF", xlab = "", main = "", ylab = "")
## Figure S2: proximity of "detects" and "non-detects" to alpha = 0.05
hist(log10(res$mat[, "origP"][selAll]), breaks = 100, col = "#00640055", xlab = "", main = "", ylab = "")
## Figure S2: proximity of "detects" and "non-detects" to alpha = 0.05
hist(log10(res$mat[, "origP"][selAll]), breaks = 100, col = "#00640077", xlab = "", main = "", ylab = "")
## Figure S2: proximity of "detects" and "non-detects" to alpha = 0.05
hist(log10(res$mat[, "origP"][selAll]), breaks = 100, col = "#00640099", xlab = "", main = "", ylab = "")
## Figure S2: proximity of "detects" and "non-detects" to alpha = 0.05
hist(log10(res$mat[, "origP"][selAll]), breaks = 100, col = "#006400AA", xlab = "", main = "", ylab = "")
hist(log10(res$mat[, "origP"][selDiff]), breaks = 100, add = TRUE, col = "#CD0000FF")
hist(log10(res$mat[, "origP"][selAll]), breaks = 100, col = "#006400AA", xlab = "", main = "", ylab = "")
hist(log10(res$mat[, "origP"][selDiff]), breaks = 100, add = TRUE, col = "#CD0000AA")
abline(v = log10(0.05), lwd = 2, col = "darkred")
hist(log10(res$mat[, "origP"][selAll]), breaks = 100, col = "#006400FF", xlab = "", main = "", ylab = "")
hist(log10(res$mat[, "origP"][selDiff]), breaks = 100, add = TRUE, col = "#CD0000FF")
abline(v = log10(0.05), lwd = 2, col = "darkred")
hist(log10(res$mat[, "origP"][selAll]), breaks = 100, col = "#006400AA", xlab = "", main = "", ylab = "")
hist(log10(res$mat[, "origP"][selDiff]), breaks = 100, add = TRUE, col = "#CD0000AA")
abline(v = log10(0.05), lwd = 2, col = "darkred")
hist(log10(res$mat[, "origP"][selAll]), breaks = 100, col = "#006400BB", xlab = "", main = "", ylab = "")
hist(log10(res$mat[, "origP"][selDiff]), breaks = 100, add = TRUE, col = "#CD0000BB")
abline(v = log10(0.05), lwd = 2, col = "darkred")
hist(log10(res$mat[, "origP"][selAll]), breaks = 100, col = "#006400CC", xlab = "", main = "", ylab = "")
hist(log10(res$mat[, "origP"][selDiff]), breaks = 100, add = TRUE, col = "#CD0000CC")
abline(v = log10(0.05), lwd = 2, col = "darkred")
hist(log10(res$mat[, "origP"][selAll]), breaks = 100, col = "#006400BB", xlab = "", main = "", ylab = "")
hist(log10(res$mat[, "origP"][selDiff]), breaks = 100, add = TRUE, col = "#CD0000BB")
abline(v = log10(0.05), lwd = 2, col = "darkred")
abline(v = log10(0.05), lwd = 2, col = "black")
View(res$mat)
hist(log10(res$mat[, "Slope"][selAll]), breaks = 100, col = "#006400BB", xlab = "", main = "", ylab = "")
hist(log10(res$mat[, "Slope"][selDiff]), breaks = 100, add = TRUE, col = "#CD0000BB")
abline(v = log10(0.05), lwd = 2, col = "black")
hist(les$mat[, "Slope"][selAll], breaks = 100, col = "#006400BB", xlab = "", main = "", ylab = "")
hist(res$mat[, "Slope"][selDiff], breaks = 100, add = TRUE, col = "#CD0000BB")
abline(v = log10(0.05), lwd = 2, col = "black")
hist(res$mat[, "Slope"][selAll], breaks = 100, col = "#006400BB", xlab = "", main = "", ylab = "")
hist(res$mat[, "Slope"][selDiff], breaks = 100, add = TRUE, col = "#CD0000BB")
abline(v = log10(0.05), lwd = 2, col = "black")
hist(res$mat[, "dSlope"][selAll], breaks = 100, col = "#006400BB", xlab = "", main = "", ylab = "")
hist(res$mat[, "dSlope"][selDiff], breaks = 100, add = TRUE, col = "#CD0000BB")
abline(v = log10(0.05), lwd = 2, col = "black")
hist(res$mat[, "dSlope"][selAll], breaks = 1000, col = "#006400BB", xlab = "", main = "", ylab = "")
hist(res$mat[, "dSlope"][selDiff], breaks = 100, add = TRUE, col = "#CD0000BB")
abline(v = log10(0.05), lwd = 2, col = "black")
hist(res$mat[, "dSlope"][selAll], breaks = 500, col = "#006400BB", xlab = "", main = "", ylab = "")
hist(res$mat[, "dSlope"][selDiff], breaks = 100, add = TRUE, col = "#CD0000BB")
abline(v = log10(0.05), lwd = 2, col = "black")
hist(res$mat[, "dSlope"][selAll], breaks = 200, col = "#006400BB", xlab = "", main = "", ylab = "")
hist(res$mat[, "dSlope"][selDiff], breaks = 100, add = TRUE, col = "#CD0000BB")
abline(v = log10(0.05), lwd = 2, col = "black")
hist(res$mat[, "dSlope"][selAll], breaks = 300, col = "#006400BB", xlab = "", main = "", ylab = "")
hist(res$mat[, "dSlope"][selDiff], breaks = 100, add = TRUE, col = "#CD0000BB")
abline(v = log10(0.05), lwd = 2, col = "black")
hist(log10(res$mat[, "origP"][selAll]), breaks = 100, col = "#006400BB", xlab = "", main = "", ylab = "")
hist(log10(res$mat[, "origP"][selDiff]), breaks = 100, add = TRUE, col = "#CD0000BB")
abline(v = log10(0.05), lwd = 2, col = "black")
hist(res$mat[, "dSE"][selAll], breaks = 300, col = "#006400BB", xlab = "", main = "", ylab = "")
hist(res$mat[, "dSE"][selDiff], breaks = 100, add = TRUE, col = "#CD0000BB")
hist(res$mat[, "dP"][selAll], breaks = 300, col = "#006400BB", xlab = "", main = "", ylab = "")
hist(res$mat[, "dP"][selDiff], breaks = 100, add = TRUE, col = "#CD0000BB")
hist(log10(res$mat[, "dP"][selAll]), breaks = 300, col = "#006400BB", xlab = "", main = "", ylab = "")
hist(log10(res$mat[, "dP"][selDiff]), breaks = 100, add = TRUE, col = "#CD0000BB")
abline(v = log10(0.05), lwd = 2, col = "black")
hist(res$mat[, "dP"][selAll], breaks = 300, col = "#006400BB", xlab = "", main = "", ylab = "")
hist(res$mat[, "dP"][selDiff], breaks = 100, add = TRUE, col = "#CD0000BB")
abline(v = log10(0.05), lwd = 2, col = "black")
hist(res$mat[, "dP"][selAll], breaks = 300, col = "#006400BB",
xlab = "", main = "", ylab = "", xlim = c(0, 0.2))
hist(res$mat[, "dP"][selAll], breaks = 100, col = "#006400BB",
xlab = "", main = "", ylab = "", xlim = c(0, 0.2))
hist(res$mat[, "dP"][selDiff], breaks = 100, add = TRUE, col = "#CD0000BB")
plot(res$mat[, "dP"][selAll])
plot(res$mat[, "dP"][selAll], pch = 16)
points(res$mat[, "dP"][selDiff], pch = 16)
plot(res$mat[, "dP"][selAll], pch = 16, col = "#006400BB")
points(res$mat[, "dP"][selDiff], pch = 16, col = "#CD0000BB")
plot(log10(res$mat[, "dP"][selAll]), pch = 16, col = "#006400BB")
points(log10(res$mat[, "dP"][selDiff]), pch = 16, col = "#CD0000BB")
hist(res$mat[, "dP"][selAll], breaks = 100, col = "#006400BB",
xlab = "", main = "", ylab = "", xlim = c(0, 0.2))
hist(res$mat[, "dP"][selDiff], breaks = 100, add = TRUE, col = "#CD0000BB")
hist(res$mat[, "dP"][selAll], breaks = 300, col = "#006400BB",
xlab = "", main = "", ylab = "", xlim = c(0, 0.2))
hist(res$mat[, "dP"][selDiff], breaks = 100, add = TRUE, col = "#CD0000BB")
hist(res$mat[, "dP"][selAll], breaks = 200, col = "#006400BB",
xlab = "", main = "", ylab = "", xlim = c(0, 0.2))
hist(res$mat[, "dP"][selDiff], breaks = 100, add = TRUE, col = "#CD0000BB")
hist(log10(res$mat[, "origP"][selAll]), breaks = 100, col = "#006400BB", xlab = "", main = "", ylab = "")
hist(log10(res$mat[, "origP"][selDiff]), breaks = 100, add = TRUE, col = "#CD0000BB")
abline(v = log10(0.05), lwd = 2, col = "black")
hist(res$mat[, "dP"][selAll], breaks = 200, col = "#006400BB",
xlab = "", main = "", ylab = "", xlim = c(0, 0.2))
hist(res$mat[, "dP"][selDiff], breaks = 100, add = TRUE, col = "#CD0000BB")
hist(log10(res$mat[, "origP"][selAll]), breaks = 100, col = "#006400BB", xlab = "", main = "", ylab = "")
hist(log10(res$mat[, "origP"][selDiff]), breaks = 100, add = TRUE, col = "#CD0000BB")
abline(v = log10(0.05), lwd = 2, col = "black")
hist(res$mat[, "dP"][selAll], breaks = 200, col = "#006400BB",
xlab = "", main = "", ylab = "", xlim = c(0, 0.2))
hist(res$mat[, "dP"][selDiff], breaks = 100, add = TRUE, col = "#CD0000BB")
hist(log10(res$mat[, "origP"][selAll]), breaks = 100, col = "#006400BB", xlab = "", main = "", ylab = "")
hist(log10(res$mat[, "origP"][selDiff]), breaks = 100, add = TRUE, col = "#CD0000BB")
abline(v = log10(0.05), lwd = 2, col = "black")
hist(res$mat[, "dP"][selAll], breaks = 200, col = "#006400BB",
xlab = "", main = "", ylab = "", xlim = c(0, 0.2))
hist(res$mat[, "dP"][selDiff], breaks = 100, add = TRUE, col = "#CD0000BB")
hist(res$mat[, "dSlope"][selAll], breaks = 200, col = "#006400BB",
xlab = "", main = "", ylab = "", xlim = c(0, 0.2))
hist(res$mat[, "dSlope"][selDiff], breaks = 100, add = TRUE, col = "#CD0000BB")
hist(res$mat[, "dSlope"][selAll], breaks = 200, col = "#006400BB",
xlab = "", main = "", ylab = "", xlim = c(0, 0.05))
hist(res$mat[, "dSlope"][selDiff], breaks = 100, add = TRUE, col = "#CD0000BB")
hist(res$mat[, "dSE"][selAll], breaks = 200, col = "#006400BB",
xlab = "", main = "", ylab = "", xlim = c(0, 0.05))
hist(res$mat[, "dSE"][selDiff], breaks = 100, add = TRUE, col = "#CD0000BB")
hist(res$mat[, "dSE"][selAll], breaks = 200, col = "#006400BB",
xlab = "", main = "", ylab = "", xlim = c(0, 0.01))
hist(res$mat[, "dSE"][selDiff], breaks = 100, add = TRUE, col = "#CD0000BB")
hist(res$mat[, "dP"][selAll], breaks = 200, col = "#006400BB",
xlab = "", main = "", ylab = "", xlim = c(0, 0.2))
hist(res$mat[, "dP"][selDiff], breaks = 100, add = TRUE, col = "#CD0000BB")
hist(res$mat[, "dP"][selAll], breaks = 200, col = "#006400BB",
xlab = "", main = "", ylab = "", xlim = c(0, 0.15))
hist(res$mat[, "dP"][selDiff], breaks = 100, add = TRUE, col = "#CD0000BB")
hist(log10(res$mat[, "origP"][selAll]), breaks = 100, col = "#006400BB", xlab = "", main = "", ylab = "")
hist(log10(res$mat[, "origP"][selDiff]), breaks = 100, add = TRUE, col = "#CD0000BB")
abline(v = log10(0.05), lwd = 2, col = "black")
hist(res$mat[, "origP"][selAll], breaks = 100, col = "#006400BB", xlab = "", main = "", ylab = "")
hist(res$mat[, "origP"][selDiff], breaks = 100, add = TRUE, col = "#CD0000BB")
abline(v = log10(0.05), lwd = 2, col = "black")
hist(res$mat[, "dP"][selAll], breaks = 200, col = "#006400BB",
xlab = "", main = "", ylab = "", xlim = c(0, 0.15))
hist(res$mat[, "dP"][selDiff], breaks = 100, add = TRUE, col = "#CD0000BB")
hist(res$mat[, "origP"][selAll], breaks = 100, col = "#006400BB", xlab = "", main = "", ylab = "")
hist(res$mat[, "origP"][selDiff], breaks = 100, add = TRUE, col = "#CD0000BB")
abline(v = log10(0.05), lwd = 2, col = "black")
hist(res$mat[, "dP"][selAll], breaks = 200, col = "#006400BB",
xlab = "", main = "", ylab = "", xlim = c(0, 0.15))
hist(res$mat[, "dP"][selDiff], breaks = 100, add = TRUE, col = "#CD0000BB")
hist(log10(res$mat[, "dP"][selAll]), breaks = 200, col = "#006400BB",
xlab = "", main = "", ylab = "", xlim = c(0, 0.15))
hist(log10(res$mat[, "dP"][selDiff]), breaks = 100, add = TRUE, col = "#CD0000BB")
hist(log10(res$mat[, "dP"][selAll]), breaks = 200, col = "#006400BB",
xlab = "", main = "", ylab = "", xlim = c(0, 01))
hist(log10(res$mat[, "dP"][selDiff]), breaks = 100, add = TRUE, col = "#CD0000BB")
hist(log10(res$mat[, "dP"][selAll]), breaks = 200, col = "#006400BB",
xlab = "", main = "", ylab = "", xlim = c(0, 1))
hist(log10(res$mat[, "dP"][selDiff]), breaks = 100, add = TRUE, col = "#CD0000BB")
hist(log10(res$mat[, "dP"][selAll]), breaks = 200, col = "#006400BB",
xlab = "", main = "", ylab = "", xlim = c(0, 0.01))
hist(log10(res$mat[, "dP"][selDiff]), breaks = 100, add = TRUE, col = "#CD0000BB")
hist(res$mat[, "dP"][selAll], breaks = 200, col = "#006400BB",
xlab = "", main = "", ylab = "", xlim = c(0, 1))
hist(res$mat[, "dP"][selDiff], breaks = 100, add = TRUE, col = "#CD0000BB")
hist(res$mat[, "dP"][selAll], breaks = 200, col = "#006400BB",
xlab = "", main = "", ylab = "", xlim = c(0, 0.2))
hist(res$mat[, "dP"][selDiff], breaks = 100, add = TRUE, col = "#CD0000BB")
rlm
library(MASS)
rlm
x <- 1:15
y <- 2 + 1.5 * x + rnorm(15, 0, 3)
LM <- rlm(y ~ x)
LM
plot(LM)
summary(LM)
2*1469+295+3*378+2*425
